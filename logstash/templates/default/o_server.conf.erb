input {
  <% if node['logstash']['server']['inputs'].empty? -%>
    # node['logstash']['server']['inputs'] is empty
  <% else -%>
    <%= LogstashConf.section_to_str(node['logstash']['server']['inputs']) %>
  <% end -%>
  <% if node['logstash']['install_zeromq'] -%>
    zeromq {
      topology => "pushpull"
      type => "zeromq-input"
      # Clients will publish their logs to us
      mode => "server"
      address => ["tcp://*:<%= @zmq_port %>"]
      codec => "json"
      sockopt => [<%= @zmq_sockopts %>]
    }
  <% end -%>
}

<% unless node['logstash']['server']['filters'].empty? -%>
filter {
  <%= LogstashConf.section_to_str(node['logstash']['server']['filters'], node['logstash']['server']['version'], @patterns_dir) %>
}
<% end -%>

output {
  <% if node['logstash']['server']['debug'] -%>
  stdout { debug => true }
  <% end -%>
  <% if not @es_server_ip.empty? -%>
  elasticsearch_http {
      host => "<%= @es_server_ip %>"
      port => "<%= @es_port %>"
      index => "<%= @es_index_prd %>"
      flush_size => "<%= @es_flush_size %>"
      idle_flush_time => "<%= @es_idle_flush %>"
      codec => "<%= @es_codec %>"
  }
  <% end -%>
  <%= LogstashConf.section_to_str(node['logstash']['server']['outputs']) %>
}
